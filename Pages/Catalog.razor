@page "/catalog"
@using front__wasm.Models
@using front__wasm.Services
@inject CatalogService CatalogService
@inject DetailsService DetailsService

<div class="bg-gradient-to-b from-purple-900 to-blue-900 min-h-screen text-white">
  <div class="container mx-auto px-4 py-12">
    <h1 class="text-4xl font-bold mb-8 text-center">Catálogo de Serviços</h1>

    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
      @if (services == null)
      {
        <p class="text-center col-span-3">Carregando serviços...</p>
      }
      else if (services.Count == 0)
      {
        <p class="text-center col-span-3">Nenhum serviço disponível no momento.</p>
      }
      else
      {
        @foreach (var serviceKey in services.Keys)
        {
          var service = services[serviceKey];
          var imageUrl = serviceKey switch
          {
              "gold" => "images/gold-services.png",
              "dungeons" => "images/mythic-plus.png",
              "raids" => "images/raid-boosting.png",
              "pvp" => "images/pvp-services.png",
              "itens" => "images/special-itens.png",
              _ => ""
          };
          
          var detailsUrl = $"/{serviceKey}";
          
          var price = service.Packages.FirstOrDefault(p => p.IsPopular)?.Price ?? service.Packages.FirstOrDefault()?.Price ?? "Consulte";
          
          <ServiceCard 
            ImageUrl="@imageUrl"
            ImageAlt="@service.Title"
            Title="@service.Title"
            Description="@service.Description"
            Price="@price"
            DetailsUrl="@detailsUrl" />
        }
      }
    </div>
  </div>
</div>

@code {
  private Dictionary<string, ServiceDetails> services = new();
  private readonly string[] serviceTypes = new[] { "gold", "dungeons", "raids", "pvp", "itens" };

  protected override async Task OnInitializedAsync()
  {
    // Load all services from services-details.json
    foreach (var serviceType in serviceTypes)
    {
      var details = await DetailsService.GetServiceDetailsAsync(serviceType);
      if (details != null)
      {
        services[serviceType] = details;
      }
    }
  }
}