@page "/itens"
@using front__wasm.Models
@using front__wasm.Services
@inject ItemService ItemService

@if (details == null)
{
    <p class="text-center text-white py-10">Carregando detalhes do serviço...</p>
}
else
{
    <ServiceTemplate 
      Title="@details.Title" 
      Description="@details.Description"
      GradientClasses="@details.GradientClasses"
      IconColor="@details.IconColor"
      HoverBorderColor="@details.HoverBorderColor">
      <ServiceFeatures>
        <h2 class="text-3xl font-bold mb-6">Categorias de Itens Disponíveis</h2>
        <ul class="space-y-4">
          @foreach (var category in details.Categories)
          {
            <li class="flex items-start">
              <svg
                class="h-6 w-6 @details.IconColor mr-2"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor">
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M5 13l4 4L19 7" />
              </svg>
              <span>@category</span>
            </li>
          }
        </ul>
      </ServiceFeatures>
      <ServiceDetails>
        <h3 class="text-2xl font-bold mb-4">@details.FarmingProcessTitle</h3>
        @foreach (var detail in details.FarmingProcessDetails)
        {
          <p class="mb-4">@detail</p>
        }
      </ServiceDetails>
      <PackageSelector>
        <h3 class="text-2xl font-bold mb-6 text-center text-gray-200">@details.FeaturedItemsTitle</h3>
        <div class="space-y-4">
          @foreach (var package in details.Packages)
          {
            var iconColorParts = details.IconColor.Split('-');
            var colorName = iconColorParts.Length > 1 ? iconColorParts[1] : "gray"; // Default to gray if split fails
            var selectedBgClass = $"bg-{colorName}-600/30";
            var popularBgClass = $"bg-{colorName}-600/20";
            var defaultBgClass = "bg-[#2d2d25]";

            <div
              @onclick="() => SelectPackage(package)"
              class="rounded-lg p-4 cursor-pointer transition border border-gray-700 hover:@details.HoverBorderColor @(selectedPackage == package ? selectedBgClass : (package.IsPopular ? popularBgClass : defaultBgClass))">
              <div class="flex justify-between items-center">
                <div>
                  <span class="font-bold text-gray-200">@package.Name</span>
                  @if (package.IsPopular)
                  {
                    <span class="bg-green-500 text-white text-xs px-2 py-1 rounded-full ml-2">Mais Popular</span>
                  }
                </div>
                <span class="text-xl font-bold text-gray-200">@package.Price</span>
              </div>
            </div>
          }
        </div>
      </PackageSelector>
      <ActionButtons>
        <button
          @onclick="@(() => Console.WriteLine("Add to cart"))"
          class="w-full bg-blue-600 hover:bg-blue-700 text-white font-bold py-3 px-4 rounded-lg transition duration-300 mb-4">
          Adicionar ao Carrinho
        </button>
        <button
          @onclick="@(() => Console.WriteLine("Buy now"))"
          class="w-full bg-green-600 hover:bg-green-700 text-white font-bold py-3 px-4 rounded-lg transition duration-300">
          Comprar Agora
        </button>
      </ActionButtons>
    </ServiceTemplate>
}

@code {
    private ItemServiceDetails? details;
    private Package? selectedPackage;

    protected override async Task OnInitializedAsync()
    {
        details = await ItemService.GetItemDetailsAsync();
    }

    private void SelectPackage(Package package)
    {
        selectedPackage = package;
    }
}
